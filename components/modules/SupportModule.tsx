import React, { useState, useEffect } from 'react';
import ModuleContainer from '../ModuleContainer';
import InfoBox from '../InfoBox';
import axios from 'axios';

interface SupportModuleProps {
  apiSettings: { apiBase: string };
  currentKey: string;
}

const SupportModule: React.FC<SupportModuleProps> = ({ apiSettings, currentKey }) => {
  const [credit, setCredit] = useState<number | null>(null);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState<string | null>(null);

  const fetchCredit = async () => {
    if (!currentKey) return;
    setLoading(true);
    setError(null);
    try {
      const res = await axios.post(`${apiSettings.apiBase}/validate`, { key: currentKey });
      setCredit(res.data?.keyInfo?.credit ?? 0);
    } catch (err) {
      setError('Kh√¥ng l·∫•y ƒë∆∞·ª£c s·ªë credit!');
    }
    setLoading(false);
  };

  useEffect(() => {
    fetchCredit();
    // eslint-disable-next-line
  }, [currentKey]);

  return (
    <ModuleContainer title="üìû Trung T√¢m H·ªó Tr·ª£ & Li√™n H·ªá">
      <div className="bg-white p-6 rounded-lg shadow-md">
        <p className="text-gray-700 text-base leading-relaxed mb-4">
          N·∫øu b·∫°n c·∫ßn h·ªó tr·ª£, gi·∫£i ƒë√°p th·∫Øc m·∫Øc ho·∫∑c c√≥ b·∫•t k·ª≥ y√™u c·∫ßu n√†o li√™n quan ƒë·∫øn 
          <strong> Tool Vi·∫øt Truy·ªán AI Story - ALL IN ONE</strong>, 
          vui l√≤ng li√™n h·ªá v·ªõi ch√∫ng t√¥i qua Zalo:
        </p>
        
        <div className="bg-gradient-to-r from-blue-500 to-teal-500 text-white p-6 rounded-lg shadow-lg text-center my-6">
          <p className="text-lg font-medium mb-1">Li√™n h·ªá Zalo:</p>
          <p className="text-3xl font-bold tracking-wider">0339933882</p>
          <p className="text-xl font-medium mt-1">(ƒê·ª©c ƒê·∫°i MMO)</p>
        </div>
        
        <InfoBox variant="info">
          <p className="font-semibold mb-1">L∆∞u √Ω khi li√™n h·ªá:</p>
          <ul className="list-disc list-inside text-sm space-y-1">
            <li>Vui l√≤ng cung c·∫•p th√¥ng tin chi ti·∫øt v·ªÅ v·∫•n ƒë·ªÅ b·∫°n g·∫∑p ph·∫£i.</li>
            <li>N·∫øu c√≥ th·ªÉ, h√£y k√®m theo ·∫£nh ch·ª•p m√†n h√¨nh ho·∫∑c video m√¥ t·∫£ l·ªói.</li>
            <li>Th·ªùi gian ph·∫£n h·ªìi c√≥ th·ªÉ t·ª´ v√†i ph√∫t ƒë·∫øn v√†i gi·ªù t√πy thu·ªôc v√†o s·ªë l∆∞·ª£ng y√™u c·∫ßu.</li>
          </ul>
        </InfoBox>

        <p className="text-gray-700 text-base leading-relaxed mt-4">
          Ch√∫ng t√¥i lu√¥n s·∫µn s√†ng l·∫Øng nghe v√† h·ªó tr·ª£ b·∫°n ƒë·ªÉ c√≥ tr·∫£i nghi·ªám t·ªët nh·∫•t v·ªõi c√¥ng c·ª•!
        </p>

        {/* Credit Display Card */}
        <div className="mt-8 flex justify-center">
          <div className="w-full max-w-xs bg-gradient-to-r from-green-400 to-blue-500 rounded-xl shadow-lg p-6 text-center">
            <div className="text-white text-lg font-semibold mb-2">üí≥ S·ªë credit c√≤n l·∫°i</div>
            <div className="text-3xl font-bold text-white mb-2">
              {loading ? 'ƒêang t·∫£i...' : (credit !== null ? credit : '...')}
            </div>
            {error && <div className="text-red-200 text-sm mb-2">{error}</div>}
            <button
              onClick={fetchCredit}
              className="mt-2 px-4 py-2 bg-white text-blue-600 font-semibold rounded shadow hover:bg-blue-50 transition"
              disabled={loading}
            >
              Ki·ªÉm tra credit
            </button>
          </div>
        </div>
      </div>
    </ModuleContainer>
  );
};

export default SupportModule;
